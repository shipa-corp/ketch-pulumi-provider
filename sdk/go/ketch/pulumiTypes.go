// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ketch

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type AppApp struct {
	Cnames          []string               `pulumi:"cnames"`
	Framework       string                 `pulumi:"framework"`
	Image           string                 `pulumi:"image"`
	Name            string                 `pulumi:"name"`
	Ports           []int                  `pulumi:"ports"`
	Processes       []AppAppProcess        `pulumi:"processes"`
	RoutingSettings *AppAppRoutingSettings `pulumi:"routingSettings"`
	Units           *int                   `pulumi:"units"`
	Version         *int                   `pulumi:"version"`
}

// AppAppInput is an input type that accepts AppAppArgs and AppAppOutput values.
// You can construct a concrete instance of `AppAppInput` via:
//
//          AppAppArgs{...}
type AppAppInput interface {
	pulumi.Input

	ToAppAppOutput() AppAppOutput
	ToAppAppOutputWithContext(context.Context) AppAppOutput
}

type AppAppArgs struct {
	Cnames          pulumi.StringArrayInput       `pulumi:"cnames"`
	Framework       pulumi.StringInput            `pulumi:"framework"`
	Image           pulumi.StringInput            `pulumi:"image"`
	Name            pulumi.StringInput            `pulumi:"name"`
	Ports           pulumi.IntArrayInput          `pulumi:"ports"`
	Processes       AppAppProcessArrayInput       `pulumi:"processes"`
	RoutingSettings AppAppRoutingSettingsPtrInput `pulumi:"routingSettings"`
	Units           pulumi.IntPtrInput            `pulumi:"units"`
	Version         pulumi.IntPtrInput            `pulumi:"version"`
}

func (AppAppArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppApp)(nil)).Elem()
}

func (i AppAppArgs) ToAppAppOutput() AppAppOutput {
	return i.ToAppAppOutputWithContext(context.Background())
}

func (i AppAppArgs) ToAppAppOutputWithContext(ctx context.Context) AppAppOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppAppOutput)
}

func (i AppAppArgs) ToAppAppPtrOutput() AppAppPtrOutput {
	return i.ToAppAppPtrOutputWithContext(context.Background())
}

func (i AppAppArgs) ToAppAppPtrOutputWithContext(ctx context.Context) AppAppPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppAppOutput).ToAppAppPtrOutputWithContext(ctx)
}

// AppAppPtrInput is an input type that accepts AppAppArgs, AppAppPtr and AppAppPtrOutput values.
// You can construct a concrete instance of `AppAppPtrInput` via:
//
//          AppAppArgs{...}
//
//  or:
//
//          nil
type AppAppPtrInput interface {
	pulumi.Input

	ToAppAppPtrOutput() AppAppPtrOutput
	ToAppAppPtrOutputWithContext(context.Context) AppAppPtrOutput
}

type appAppPtrType AppAppArgs

func AppAppPtr(v *AppAppArgs) AppAppPtrInput {
	return (*appAppPtrType)(v)
}

func (*appAppPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppApp)(nil)).Elem()
}

func (i *appAppPtrType) ToAppAppPtrOutput() AppAppPtrOutput {
	return i.ToAppAppPtrOutputWithContext(context.Background())
}

func (i *appAppPtrType) ToAppAppPtrOutputWithContext(ctx context.Context) AppAppPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppAppPtrOutput)
}

type AppAppOutput struct{ *pulumi.OutputState }

func (AppAppOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppApp)(nil)).Elem()
}

func (o AppAppOutput) ToAppAppOutput() AppAppOutput {
	return o
}

func (o AppAppOutput) ToAppAppOutputWithContext(ctx context.Context) AppAppOutput {
	return o
}

func (o AppAppOutput) ToAppAppPtrOutput() AppAppPtrOutput {
	return o.ToAppAppPtrOutputWithContext(context.Background())
}

func (o AppAppOutput) ToAppAppPtrOutputWithContext(ctx context.Context) AppAppPtrOutput {
	return o.ApplyT(func(v AppApp) *AppApp {
		return &v
	}).(AppAppPtrOutput)
}
func (o AppAppOutput) Cnames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AppApp) []string { return v.Cnames }).(pulumi.StringArrayOutput)
}

func (o AppAppOutput) Framework() pulumi.StringOutput {
	return o.ApplyT(func(v AppApp) string { return v.Framework }).(pulumi.StringOutput)
}

func (o AppAppOutput) Image() pulumi.StringOutput {
	return o.ApplyT(func(v AppApp) string { return v.Image }).(pulumi.StringOutput)
}

func (o AppAppOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v AppApp) string { return v.Name }).(pulumi.StringOutput)
}

func (o AppAppOutput) Ports() pulumi.IntArrayOutput {
	return o.ApplyT(func(v AppApp) []int { return v.Ports }).(pulumi.IntArrayOutput)
}

func (o AppAppOutput) Processes() AppAppProcessArrayOutput {
	return o.ApplyT(func(v AppApp) []AppAppProcess { return v.Processes }).(AppAppProcessArrayOutput)
}

func (o AppAppOutput) RoutingSettings() AppAppRoutingSettingsPtrOutput {
	return o.ApplyT(func(v AppApp) *AppAppRoutingSettings { return v.RoutingSettings }).(AppAppRoutingSettingsPtrOutput)
}

func (o AppAppOutput) Units() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AppApp) *int { return v.Units }).(pulumi.IntPtrOutput)
}

func (o AppAppOutput) Version() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AppApp) *int { return v.Version }).(pulumi.IntPtrOutput)
}

type AppAppPtrOutput struct{ *pulumi.OutputState }

func (AppAppPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppApp)(nil)).Elem()
}

func (o AppAppPtrOutput) ToAppAppPtrOutput() AppAppPtrOutput {
	return o
}

func (o AppAppPtrOutput) ToAppAppPtrOutputWithContext(ctx context.Context) AppAppPtrOutput {
	return o
}

func (o AppAppPtrOutput) Elem() AppAppOutput {
	return o.ApplyT(func(v *AppApp) AppApp { return *v }).(AppAppOutput)
}

func (o AppAppPtrOutput) Cnames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AppApp) []string {
		if v == nil {
			return nil
		}
		return v.Cnames
	}).(pulumi.StringArrayOutput)
}

func (o AppAppPtrOutput) Framework() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppApp) *string {
		if v == nil {
			return nil
		}
		return &v.Framework
	}).(pulumi.StringPtrOutput)
}

func (o AppAppPtrOutput) Image() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppApp) *string {
		if v == nil {
			return nil
		}
		return &v.Image
	}).(pulumi.StringPtrOutput)
}

func (o AppAppPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppApp) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

func (o AppAppPtrOutput) Ports() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *AppApp) []int {
		if v == nil {
			return nil
		}
		return v.Ports
	}).(pulumi.IntArrayOutput)
}

func (o AppAppPtrOutput) Processes() AppAppProcessArrayOutput {
	return o.ApplyT(func(v *AppApp) []AppAppProcess {
		if v == nil {
			return nil
		}
		return v.Processes
	}).(AppAppProcessArrayOutput)
}

func (o AppAppPtrOutput) RoutingSettings() AppAppRoutingSettingsPtrOutput {
	return o.ApplyT(func(v *AppApp) *AppAppRoutingSettings {
		if v == nil {
			return nil
		}
		return v.RoutingSettings
	}).(AppAppRoutingSettingsPtrOutput)
}

func (o AppAppPtrOutput) Units() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AppApp) *int {
		if v == nil {
			return nil
		}
		return v.Units
	}).(pulumi.IntPtrOutput)
}

func (o AppAppPtrOutput) Version() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AppApp) *int {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.IntPtrOutput)
}

type AppAppProcess struct {
	Cmds []string `pulumi:"cmds"`
	Name *string  `pulumi:"name"`
}

// AppAppProcessInput is an input type that accepts AppAppProcessArgs and AppAppProcessOutput values.
// You can construct a concrete instance of `AppAppProcessInput` via:
//
//          AppAppProcessArgs{...}
type AppAppProcessInput interface {
	pulumi.Input

	ToAppAppProcessOutput() AppAppProcessOutput
	ToAppAppProcessOutputWithContext(context.Context) AppAppProcessOutput
}

type AppAppProcessArgs struct {
	Cmds pulumi.StringArrayInput `pulumi:"cmds"`
	Name pulumi.StringPtrInput   `pulumi:"name"`
}

func (AppAppProcessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppAppProcess)(nil)).Elem()
}

func (i AppAppProcessArgs) ToAppAppProcessOutput() AppAppProcessOutput {
	return i.ToAppAppProcessOutputWithContext(context.Background())
}

func (i AppAppProcessArgs) ToAppAppProcessOutputWithContext(ctx context.Context) AppAppProcessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppAppProcessOutput)
}

// AppAppProcessArrayInput is an input type that accepts AppAppProcessArray and AppAppProcessArrayOutput values.
// You can construct a concrete instance of `AppAppProcessArrayInput` via:
//
//          AppAppProcessArray{ AppAppProcessArgs{...} }
type AppAppProcessArrayInput interface {
	pulumi.Input

	ToAppAppProcessArrayOutput() AppAppProcessArrayOutput
	ToAppAppProcessArrayOutputWithContext(context.Context) AppAppProcessArrayOutput
}

type AppAppProcessArray []AppAppProcessInput

func (AppAppProcessArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppAppProcess)(nil)).Elem()
}

func (i AppAppProcessArray) ToAppAppProcessArrayOutput() AppAppProcessArrayOutput {
	return i.ToAppAppProcessArrayOutputWithContext(context.Background())
}

func (i AppAppProcessArray) ToAppAppProcessArrayOutputWithContext(ctx context.Context) AppAppProcessArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppAppProcessArrayOutput)
}

type AppAppProcessOutput struct{ *pulumi.OutputState }

func (AppAppProcessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppAppProcess)(nil)).Elem()
}

func (o AppAppProcessOutput) ToAppAppProcessOutput() AppAppProcessOutput {
	return o
}

func (o AppAppProcessOutput) ToAppAppProcessOutputWithContext(ctx context.Context) AppAppProcessOutput {
	return o
}

func (o AppAppProcessOutput) Cmds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AppAppProcess) []string { return v.Cmds }).(pulumi.StringArrayOutput)
}

func (o AppAppProcessOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppAppProcess) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type AppAppProcessArrayOutput struct{ *pulumi.OutputState }

func (AppAppProcessArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppAppProcess)(nil)).Elem()
}

func (o AppAppProcessArrayOutput) ToAppAppProcessArrayOutput() AppAppProcessArrayOutput {
	return o
}

func (o AppAppProcessArrayOutput) ToAppAppProcessArrayOutputWithContext(ctx context.Context) AppAppProcessArrayOutput {
	return o
}

func (o AppAppProcessArrayOutput) Index(i pulumi.IntInput) AppAppProcessOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AppAppProcess {
		return vs[0].([]AppAppProcess)[vs[1].(int)]
	}).(AppAppProcessOutput)
}

type AppAppRoutingSettings struct {
	Weight *int `pulumi:"weight"`
}

// AppAppRoutingSettingsInput is an input type that accepts AppAppRoutingSettingsArgs and AppAppRoutingSettingsOutput values.
// You can construct a concrete instance of `AppAppRoutingSettingsInput` via:
//
//          AppAppRoutingSettingsArgs{...}
type AppAppRoutingSettingsInput interface {
	pulumi.Input

	ToAppAppRoutingSettingsOutput() AppAppRoutingSettingsOutput
	ToAppAppRoutingSettingsOutputWithContext(context.Context) AppAppRoutingSettingsOutput
}

type AppAppRoutingSettingsArgs struct {
	Weight pulumi.IntPtrInput `pulumi:"weight"`
}

func (AppAppRoutingSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppAppRoutingSettings)(nil)).Elem()
}

func (i AppAppRoutingSettingsArgs) ToAppAppRoutingSettingsOutput() AppAppRoutingSettingsOutput {
	return i.ToAppAppRoutingSettingsOutputWithContext(context.Background())
}

func (i AppAppRoutingSettingsArgs) ToAppAppRoutingSettingsOutputWithContext(ctx context.Context) AppAppRoutingSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppAppRoutingSettingsOutput)
}

func (i AppAppRoutingSettingsArgs) ToAppAppRoutingSettingsPtrOutput() AppAppRoutingSettingsPtrOutput {
	return i.ToAppAppRoutingSettingsPtrOutputWithContext(context.Background())
}

func (i AppAppRoutingSettingsArgs) ToAppAppRoutingSettingsPtrOutputWithContext(ctx context.Context) AppAppRoutingSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppAppRoutingSettingsOutput).ToAppAppRoutingSettingsPtrOutputWithContext(ctx)
}

// AppAppRoutingSettingsPtrInput is an input type that accepts AppAppRoutingSettingsArgs, AppAppRoutingSettingsPtr and AppAppRoutingSettingsPtrOutput values.
// You can construct a concrete instance of `AppAppRoutingSettingsPtrInput` via:
//
//          AppAppRoutingSettingsArgs{...}
//
//  or:
//
//          nil
type AppAppRoutingSettingsPtrInput interface {
	pulumi.Input

	ToAppAppRoutingSettingsPtrOutput() AppAppRoutingSettingsPtrOutput
	ToAppAppRoutingSettingsPtrOutputWithContext(context.Context) AppAppRoutingSettingsPtrOutput
}

type appAppRoutingSettingsPtrType AppAppRoutingSettingsArgs

func AppAppRoutingSettingsPtr(v *AppAppRoutingSettingsArgs) AppAppRoutingSettingsPtrInput {
	return (*appAppRoutingSettingsPtrType)(v)
}

func (*appAppRoutingSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppAppRoutingSettings)(nil)).Elem()
}

func (i *appAppRoutingSettingsPtrType) ToAppAppRoutingSettingsPtrOutput() AppAppRoutingSettingsPtrOutput {
	return i.ToAppAppRoutingSettingsPtrOutputWithContext(context.Background())
}

func (i *appAppRoutingSettingsPtrType) ToAppAppRoutingSettingsPtrOutputWithContext(ctx context.Context) AppAppRoutingSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppAppRoutingSettingsPtrOutput)
}

type AppAppRoutingSettingsOutput struct{ *pulumi.OutputState }

func (AppAppRoutingSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppAppRoutingSettings)(nil)).Elem()
}

func (o AppAppRoutingSettingsOutput) ToAppAppRoutingSettingsOutput() AppAppRoutingSettingsOutput {
	return o
}

func (o AppAppRoutingSettingsOutput) ToAppAppRoutingSettingsOutputWithContext(ctx context.Context) AppAppRoutingSettingsOutput {
	return o
}

func (o AppAppRoutingSettingsOutput) ToAppAppRoutingSettingsPtrOutput() AppAppRoutingSettingsPtrOutput {
	return o.ToAppAppRoutingSettingsPtrOutputWithContext(context.Background())
}

func (o AppAppRoutingSettingsOutput) ToAppAppRoutingSettingsPtrOutputWithContext(ctx context.Context) AppAppRoutingSettingsPtrOutput {
	return o.ApplyT(func(v AppAppRoutingSettings) *AppAppRoutingSettings {
		return &v
	}).(AppAppRoutingSettingsPtrOutput)
}
func (o AppAppRoutingSettingsOutput) Weight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AppAppRoutingSettings) *int { return v.Weight }).(pulumi.IntPtrOutput)
}

type AppAppRoutingSettingsPtrOutput struct{ *pulumi.OutputState }

func (AppAppRoutingSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppAppRoutingSettings)(nil)).Elem()
}

func (o AppAppRoutingSettingsPtrOutput) ToAppAppRoutingSettingsPtrOutput() AppAppRoutingSettingsPtrOutput {
	return o
}

func (o AppAppRoutingSettingsPtrOutput) ToAppAppRoutingSettingsPtrOutputWithContext(ctx context.Context) AppAppRoutingSettingsPtrOutput {
	return o
}

func (o AppAppRoutingSettingsPtrOutput) Elem() AppAppRoutingSettingsOutput {
	return o.ApplyT(func(v *AppAppRoutingSettings) AppAppRoutingSettings { return *v }).(AppAppRoutingSettingsOutput)
}

func (o AppAppRoutingSettingsPtrOutput) Weight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AppAppRoutingSettings) *int {
		if v == nil {
			return nil
		}
		return v.Weight
	}).(pulumi.IntPtrOutput)
}

type FrameworkFramework struct {
	AppQuotaLimit     *int                                `pulumi:"appQuotaLimit"`
	IngressController FrameworkFrameworkIngressController `pulumi:"ingressController"`
	Name              string                              `pulumi:"name"`
	Namespace         *string                             `pulumi:"namespace"`
}

// FrameworkFrameworkInput is an input type that accepts FrameworkFrameworkArgs and FrameworkFrameworkOutput values.
// You can construct a concrete instance of `FrameworkFrameworkInput` via:
//
//          FrameworkFrameworkArgs{...}
type FrameworkFrameworkInput interface {
	pulumi.Input

	ToFrameworkFrameworkOutput() FrameworkFrameworkOutput
	ToFrameworkFrameworkOutputWithContext(context.Context) FrameworkFrameworkOutput
}

type FrameworkFrameworkArgs struct {
	AppQuotaLimit     pulumi.IntPtrInput                       `pulumi:"appQuotaLimit"`
	IngressController FrameworkFrameworkIngressControllerInput `pulumi:"ingressController"`
	Name              pulumi.StringInput                       `pulumi:"name"`
	Namespace         pulumi.StringPtrInput                    `pulumi:"namespace"`
}

func (FrameworkFrameworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FrameworkFramework)(nil)).Elem()
}

func (i FrameworkFrameworkArgs) ToFrameworkFrameworkOutput() FrameworkFrameworkOutput {
	return i.ToFrameworkFrameworkOutputWithContext(context.Background())
}

func (i FrameworkFrameworkArgs) ToFrameworkFrameworkOutputWithContext(ctx context.Context) FrameworkFrameworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FrameworkFrameworkOutput)
}

func (i FrameworkFrameworkArgs) ToFrameworkFrameworkPtrOutput() FrameworkFrameworkPtrOutput {
	return i.ToFrameworkFrameworkPtrOutputWithContext(context.Background())
}

func (i FrameworkFrameworkArgs) ToFrameworkFrameworkPtrOutputWithContext(ctx context.Context) FrameworkFrameworkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FrameworkFrameworkOutput).ToFrameworkFrameworkPtrOutputWithContext(ctx)
}

// FrameworkFrameworkPtrInput is an input type that accepts FrameworkFrameworkArgs, FrameworkFrameworkPtr and FrameworkFrameworkPtrOutput values.
// You can construct a concrete instance of `FrameworkFrameworkPtrInput` via:
//
//          FrameworkFrameworkArgs{...}
//
//  or:
//
//          nil
type FrameworkFrameworkPtrInput interface {
	pulumi.Input

	ToFrameworkFrameworkPtrOutput() FrameworkFrameworkPtrOutput
	ToFrameworkFrameworkPtrOutputWithContext(context.Context) FrameworkFrameworkPtrOutput
}

type frameworkFrameworkPtrType FrameworkFrameworkArgs

func FrameworkFrameworkPtr(v *FrameworkFrameworkArgs) FrameworkFrameworkPtrInput {
	return (*frameworkFrameworkPtrType)(v)
}

func (*frameworkFrameworkPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FrameworkFramework)(nil)).Elem()
}

func (i *frameworkFrameworkPtrType) ToFrameworkFrameworkPtrOutput() FrameworkFrameworkPtrOutput {
	return i.ToFrameworkFrameworkPtrOutputWithContext(context.Background())
}

func (i *frameworkFrameworkPtrType) ToFrameworkFrameworkPtrOutputWithContext(ctx context.Context) FrameworkFrameworkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FrameworkFrameworkPtrOutput)
}

type FrameworkFrameworkOutput struct{ *pulumi.OutputState }

func (FrameworkFrameworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FrameworkFramework)(nil)).Elem()
}

func (o FrameworkFrameworkOutput) ToFrameworkFrameworkOutput() FrameworkFrameworkOutput {
	return o
}

func (o FrameworkFrameworkOutput) ToFrameworkFrameworkOutputWithContext(ctx context.Context) FrameworkFrameworkOutput {
	return o
}

func (o FrameworkFrameworkOutput) ToFrameworkFrameworkPtrOutput() FrameworkFrameworkPtrOutput {
	return o.ToFrameworkFrameworkPtrOutputWithContext(context.Background())
}

func (o FrameworkFrameworkOutput) ToFrameworkFrameworkPtrOutputWithContext(ctx context.Context) FrameworkFrameworkPtrOutput {
	return o.ApplyT(func(v FrameworkFramework) *FrameworkFramework {
		return &v
	}).(FrameworkFrameworkPtrOutput)
}
func (o FrameworkFrameworkOutput) AppQuotaLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FrameworkFramework) *int { return v.AppQuotaLimit }).(pulumi.IntPtrOutput)
}

func (o FrameworkFrameworkOutput) IngressController() FrameworkFrameworkIngressControllerOutput {
	return o.ApplyT(func(v FrameworkFramework) FrameworkFrameworkIngressController { return v.IngressController }).(FrameworkFrameworkIngressControllerOutput)
}

func (o FrameworkFrameworkOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v FrameworkFramework) string { return v.Name }).(pulumi.StringOutput)
}

func (o FrameworkFrameworkOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FrameworkFramework) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type FrameworkFrameworkPtrOutput struct{ *pulumi.OutputState }

func (FrameworkFrameworkPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FrameworkFramework)(nil)).Elem()
}

func (o FrameworkFrameworkPtrOutput) ToFrameworkFrameworkPtrOutput() FrameworkFrameworkPtrOutput {
	return o
}

func (o FrameworkFrameworkPtrOutput) ToFrameworkFrameworkPtrOutputWithContext(ctx context.Context) FrameworkFrameworkPtrOutput {
	return o
}

func (o FrameworkFrameworkPtrOutput) Elem() FrameworkFrameworkOutput {
	return o.ApplyT(func(v *FrameworkFramework) FrameworkFramework { return *v }).(FrameworkFrameworkOutput)
}

func (o FrameworkFrameworkPtrOutput) AppQuotaLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FrameworkFramework) *int {
		if v == nil {
			return nil
		}
		return v.AppQuotaLimit
	}).(pulumi.IntPtrOutput)
}

func (o FrameworkFrameworkPtrOutput) IngressController() FrameworkFrameworkIngressControllerPtrOutput {
	return o.ApplyT(func(v *FrameworkFramework) *FrameworkFrameworkIngressController {
		if v == nil {
			return nil
		}
		return &v.IngressController
	}).(FrameworkFrameworkIngressControllerPtrOutput)
}

func (o FrameworkFrameworkPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FrameworkFramework) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

func (o FrameworkFrameworkPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FrameworkFramework) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

type FrameworkFrameworkIngressController struct {
	ClassName       string  `pulumi:"className"`
	ClusterIssuer   *string `pulumi:"clusterIssuer"`
	ServiceEndpoint string  `pulumi:"serviceEndpoint"`
	Type            string  `pulumi:"type"`
}

// FrameworkFrameworkIngressControllerInput is an input type that accepts FrameworkFrameworkIngressControllerArgs and FrameworkFrameworkIngressControllerOutput values.
// You can construct a concrete instance of `FrameworkFrameworkIngressControllerInput` via:
//
//          FrameworkFrameworkIngressControllerArgs{...}
type FrameworkFrameworkIngressControllerInput interface {
	pulumi.Input

	ToFrameworkFrameworkIngressControllerOutput() FrameworkFrameworkIngressControllerOutput
	ToFrameworkFrameworkIngressControllerOutputWithContext(context.Context) FrameworkFrameworkIngressControllerOutput
}

type FrameworkFrameworkIngressControllerArgs struct {
	ClassName       pulumi.StringInput    `pulumi:"className"`
	ClusterIssuer   pulumi.StringPtrInput `pulumi:"clusterIssuer"`
	ServiceEndpoint pulumi.StringInput    `pulumi:"serviceEndpoint"`
	Type            pulumi.StringInput    `pulumi:"type"`
}

func (FrameworkFrameworkIngressControllerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FrameworkFrameworkIngressController)(nil)).Elem()
}

func (i FrameworkFrameworkIngressControllerArgs) ToFrameworkFrameworkIngressControllerOutput() FrameworkFrameworkIngressControllerOutput {
	return i.ToFrameworkFrameworkIngressControllerOutputWithContext(context.Background())
}

func (i FrameworkFrameworkIngressControllerArgs) ToFrameworkFrameworkIngressControllerOutputWithContext(ctx context.Context) FrameworkFrameworkIngressControllerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FrameworkFrameworkIngressControllerOutput)
}

func (i FrameworkFrameworkIngressControllerArgs) ToFrameworkFrameworkIngressControllerPtrOutput() FrameworkFrameworkIngressControllerPtrOutput {
	return i.ToFrameworkFrameworkIngressControllerPtrOutputWithContext(context.Background())
}

func (i FrameworkFrameworkIngressControllerArgs) ToFrameworkFrameworkIngressControllerPtrOutputWithContext(ctx context.Context) FrameworkFrameworkIngressControllerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FrameworkFrameworkIngressControllerOutput).ToFrameworkFrameworkIngressControllerPtrOutputWithContext(ctx)
}

// FrameworkFrameworkIngressControllerPtrInput is an input type that accepts FrameworkFrameworkIngressControllerArgs, FrameworkFrameworkIngressControllerPtr and FrameworkFrameworkIngressControllerPtrOutput values.
// You can construct a concrete instance of `FrameworkFrameworkIngressControllerPtrInput` via:
//
//          FrameworkFrameworkIngressControllerArgs{...}
//
//  or:
//
//          nil
type FrameworkFrameworkIngressControllerPtrInput interface {
	pulumi.Input

	ToFrameworkFrameworkIngressControllerPtrOutput() FrameworkFrameworkIngressControllerPtrOutput
	ToFrameworkFrameworkIngressControllerPtrOutputWithContext(context.Context) FrameworkFrameworkIngressControllerPtrOutput
}

type frameworkFrameworkIngressControllerPtrType FrameworkFrameworkIngressControllerArgs

func FrameworkFrameworkIngressControllerPtr(v *FrameworkFrameworkIngressControllerArgs) FrameworkFrameworkIngressControllerPtrInput {
	return (*frameworkFrameworkIngressControllerPtrType)(v)
}

func (*frameworkFrameworkIngressControllerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FrameworkFrameworkIngressController)(nil)).Elem()
}

func (i *frameworkFrameworkIngressControllerPtrType) ToFrameworkFrameworkIngressControllerPtrOutput() FrameworkFrameworkIngressControllerPtrOutput {
	return i.ToFrameworkFrameworkIngressControllerPtrOutputWithContext(context.Background())
}

func (i *frameworkFrameworkIngressControllerPtrType) ToFrameworkFrameworkIngressControllerPtrOutputWithContext(ctx context.Context) FrameworkFrameworkIngressControllerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FrameworkFrameworkIngressControllerPtrOutput)
}

type FrameworkFrameworkIngressControllerOutput struct{ *pulumi.OutputState }

func (FrameworkFrameworkIngressControllerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FrameworkFrameworkIngressController)(nil)).Elem()
}

func (o FrameworkFrameworkIngressControllerOutput) ToFrameworkFrameworkIngressControllerOutput() FrameworkFrameworkIngressControllerOutput {
	return o
}

func (o FrameworkFrameworkIngressControllerOutput) ToFrameworkFrameworkIngressControllerOutputWithContext(ctx context.Context) FrameworkFrameworkIngressControllerOutput {
	return o
}

func (o FrameworkFrameworkIngressControllerOutput) ToFrameworkFrameworkIngressControllerPtrOutput() FrameworkFrameworkIngressControllerPtrOutput {
	return o.ToFrameworkFrameworkIngressControllerPtrOutputWithContext(context.Background())
}

func (o FrameworkFrameworkIngressControllerOutput) ToFrameworkFrameworkIngressControllerPtrOutputWithContext(ctx context.Context) FrameworkFrameworkIngressControllerPtrOutput {
	return o.ApplyT(func(v FrameworkFrameworkIngressController) *FrameworkFrameworkIngressController {
		return &v
	}).(FrameworkFrameworkIngressControllerPtrOutput)
}
func (o FrameworkFrameworkIngressControllerOutput) ClassName() pulumi.StringOutput {
	return o.ApplyT(func(v FrameworkFrameworkIngressController) string { return v.ClassName }).(pulumi.StringOutput)
}

func (o FrameworkFrameworkIngressControllerOutput) ClusterIssuer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FrameworkFrameworkIngressController) *string { return v.ClusterIssuer }).(pulumi.StringPtrOutput)
}

func (o FrameworkFrameworkIngressControllerOutput) ServiceEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v FrameworkFrameworkIngressController) string { return v.ServiceEndpoint }).(pulumi.StringOutput)
}

func (o FrameworkFrameworkIngressControllerOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v FrameworkFrameworkIngressController) string { return v.Type }).(pulumi.StringOutput)
}

type FrameworkFrameworkIngressControllerPtrOutput struct{ *pulumi.OutputState }

func (FrameworkFrameworkIngressControllerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FrameworkFrameworkIngressController)(nil)).Elem()
}

func (o FrameworkFrameworkIngressControllerPtrOutput) ToFrameworkFrameworkIngressControllerPtrOutput() FrameworkFrameworkIngressControllerPtrOutput {
	return o
}

func (o FrameworkFrameworkIngressControllerPtrOutput) ToFrameworkFrameworkIngressControllerPtrOutputWithContext(ctx context.Context) FrameworkFrameworkIngressControllerPtrOutput {
	return o
}

func (o FrameworkFrameworkIngressControllerPtrOutput) Elem() FrameworkFrameworkIngressControllerOutput {
	return o.ApplyT(func(v *FrameworkFrameworkIngressController) FrameworkFrameworkIngressController { return *v }).(FrameworkFrameworkIngressControllerOutput)
}

func (o FrameworkFrameworkIngressControllerPtrOutput) ClassName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FrameworkFrameworkIngressController) *string {
		if v == nil {
			return nil
		}
		return &v.ClassName
	}).(pulumi.StringPtrOutput)
}

func (o FrameworkFrameworkIngressControllerPtrOutput) ClusterIssuer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FrameworkFrameworkIngressController) *string {
		if v == nil {
			return nil
		}
		return v.ClusterIssuer
	}).(pulumi.StringPtrOutput)
}

func (o FrameworkFrameworkIngressControllerPtrOutput) ServiceEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FrameworkFrameworkIngressController) *string {
		if v == nil {
			return nil
		}
		return &v.ServiceEndpoint
	}).(pulumi.StringPtrOutput)
}

func (o FrameworkFrameworkIngressControllerPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FrameworkFrameworkIngressController) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type JobJob struct {
	BackoffLimit *int              `pulumi:"backoffLimit"`
	Completions  *int              `pulumi:"completions"`
	Containers   []JobJobContainer `pulumi:"containers"`
	Description  *string           `pulumi:"description"`
	Framework    string            `pulumi:"framework"`
	Name         string            `pulumi:"name"`
	Parallelism  *int              `pulumi:"parallelism"`
	Policy       *JobJobPolicy     `pulumi:"policy"`
	Suspend      *bool             `pulumi:"suspend"`
	Type         *string           `pulumi:"type"`
	Version      *string           `pulumi:"version"`
}

// JobJobInput is an input type that accepts JobJobArgs and JobJobOutput values.
// You can construct a concrete instance of `JobJobInput` via:
//
//          JobJobArgs{...}
type JobJobInput interface {
	pulumi.Input

	ToJobJobOutput() JobJobOutput
	ToJobJobOutputWithContext(context.Context) JobJobOutput
}

type JobJobArgs struct {
	BackoffLimit pulumi.IntPtrInput        `pulumi:"backoffLimit"`
	Completions  pulumi.IntPtrInput        `pulumi:"completions"`
	Containers   JobJobContainerArrayInput `pulumi:"containers"`
	Description  pulumi.StringPtrInput     `pulumi:"description"`
	Framework    pulumi.StringInput        `pulumi:"framework"`
	Name         pulumi.StringInput        `pulumi:"name"`
	Parallelism  pulumi.IntPtrInput        `pulumi:"parallelism"`
	Policy       JobJobPolicyPtrInput      `pulumi:"policy"`
	Suspend      pulumi.BoolPtrInput       `pulumi:"suspend"`
	Type         pulumi.StringPtrInput     `pulumi:"type"`
	Version      pulumi.StringPtrInput     `pulumi:"version"`
}

func (JobJobArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobJob)(nil)).Elem()
}

func (i JobJobArgs) ToJobJobOutput() JobJobOutput {
	return i.ToJobJobOutputWithContext(context.Background())
}

func (i JobJobArgs) ToJobJobOutputWithContext(ctx context.Context) JobJobOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobJobOutput)
}

func (i JobJobArgs) ToJobJobPtrOutput() JobJobPtrOutput {
	return i.ToJobJobPtrOutputWithContext(context.Background())
}

func (i JobJobArgs) ToJobJobPtrOutputWithContext(ctx context.Context) JobJobPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobJobOutput).ToJobJobPtrOutputWithContext(ctx)
}

// JobJobPtrInput is an input type that accepts JobJobArgs, JobJobPtr and JobJobPtrOutput values.
// You can construct a concrete instance of `JobJobPtrInput` via:
//
//          JobJobArgs{...}
//
//  or:
//
//          nil
type JobJobPtrInput interface {
	pulumi.Input

	ToJobJobPtrOutput() JobJobPtrOutput
	ToJobJobPtrOutputWithContext(context.Context) JobJobPtrOutput
}

type jobJobPtrType JobJobArgs

func JobJobPtr(v *JobJobArgs) JobJobPtrInput {
	return (*jobJobPtrType)(v)
}

func (*jobJobPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**JobJob)(nil)).Elem()
}

func (i *jobJobPtrType) ToJobJobPtrOutput() JobJobPtrOutput {
	return i.ToJobJobPtrOutputWithContext(context.Background())
}

func (i *jobJobPtrType) ToJobJobPtrOutputWithContext(ctx context.Context) JobJobPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobJobPtrOutput)
}

type JobJobOutput struct{ *pulumi.OutputState }

func (JobJobOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobJob)(nil)).Elem()
}

func (o JobJobOutput) ToJobJobOutput() JobJobOutput {
	return o
}

func (o JobJobOutput) ToJobJobOutputWithContext(ctx context.Context) JobJobOutput {
	return o
}

func (o JobJobOutput) ToJobJobPtrOutput() JobJobPtrOutput {
	return o.ToJobJobPtrOutputWithContext(context.Background())
}

func (o JobJobOutput) ToJobJobPtrOutputWithContext(ctx context.Context) JobJobPtrOutput {
	return o.ApplyT(func(v JobJob) *JobJob {
		return &v
	}).(JobJobPtrOutput)
}
func (o JobJobOutput) BackoffLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v JobJob) *int { return v.BackoffLimit }).(pulumi.IntPtrOutput)
}

func (o JobJobOutput) Completions() pulumi.IntPtrOutput {
	return o.ApplyT(func(v JobJob) *int { return v.Completions }).(pulumi.IntPtrOutput)
}

func (o JobJobOutput) Containers() JobJobContainerArrayOutput {
	return o.ApplyT(func(v JobJob) []JobJobContainer { return v.Containers }).(JobJobContainerArrayOutput)
}

func (o JobJobOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobJob) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o JobJobOutput) Framework() pulumi.StringOutput {
	return o.ApplyT(func(v JobJob) string { return v.Framework }).(pulumi.StringOutput)
}

func (o JobJobOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v JobJob) string { return v.Name }).(pulumi.StringOutput)
}

func (o JobJobOutput) Parallelism() pulumi.IntPtrOutput {
	return o.ApplyT(func(v JobJob) *int { return v.Parallelism }).(pulumi.IntPtrOutput)
}

func (o JobJobOutput) Policy() JobJobPolicyPtrOutput {
	return o.ApplyT(func(v JobJob) *JobJobPolicy { return v.Policy }).(JobJobPolicyPtrOutput)
}

func (o JobJobOutput) Suspend() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v JobJob) *bool { return v.Suspend }).(pulumi.BoolPtrOutput)
}

func (o JobJobOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobJob) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o JobJobOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobJob) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type JobJobPtrOutput struct{ *pulumi.OutputState }

func (JobJobPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JobJob)(nil)).Elem()
}

func (o JobJobPtrOutput) ToJobJobPtrOutput() JobJobPtrOutput {
	return o
}

func (o JobJobPtrOutput) ToJobJobPtrOutputWithContext(ctx context.Context) JobJobPtrOutput {
	return o
}

func (o JobJobPtrOutput) Elem() JobJobOutput {
	return o.ApplyT(func(v *JobJob) JobJob { return *v }).(JobJobOutput)
}

func (o JobJobPtrOutput) BackoffLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *JobJob) *int {
		if v == nil {
			return nil
		}
		return v.BackoffLimit
	}).(pulumi.IntPtrOutput)
}

func (o JobJobPtrOutput) Completions() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *JobJob) *int {
		if v == nil {
			return nil
		}
		return v.Completions
	}).(pulumi.IntPtrOutput)
}

func (o JobJobPtrOutput) Containers() JobJobContainerArrayOutput {
	return o.ApplyT(func(v *JobJob) []JobJobContainer {
		if v == nil {
			return nil
		}
		return v.Containers
	}).(JobJobContainerArrayOutput)
}

func (o JobJobPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobJob) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

func (o JobJobPtrOutput) Framework() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobJob) *string {
		if v == nil {
			return nil
		}
		return &v.Framework
	}).(pulumi.StringPtrOutput)
}

func (o JobJobPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobJob) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

func (o JobJobPtrOutput) Parallelism() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *JobJob) *int {
		if v == nil {
			return nil
		}
		return v.Parallelism
	}).(pulumi.IntPtrOutput)
}

func (o JobJobPtrOutput) Policy() JobJobPolicyPtrOutput {
	return o.ApplyT(func(v *JobJob) *JobJobPolicy {
		if v == nil {
			return nil
		}
		return v.Policy
	}).(JobJobPolicyPtrOutput)
}

func (o JobJobPtrOutput) Suspend() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *JobJob) *bool {
		if v == nil {
			return nil
		}
		return v.Suspend
	}).(pulumi.BoolPtrOutput)
}

func (o JobJobPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobJob) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

func (o JobJobPtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobJob) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

type JobJobContainer struct {
	Commands []string `pulumi:"commands"`
	Image    string   `pulumi:"image"`
	Name     string   `pulumi:"name"`
}

// JobJobContainerInput is an input type that accepts JobJobContainerArgs and JobJobContainerOutput values.
// You can construct a concrete instance of `JobJobContainerInput` via:
//
//          JobJobContainerArgs{...}
type JobJobContainerInput interface {
	pulumi.Input

	ToJobJobContainerOutput() JobJobContainerOutput
	ToJobJobContainerOutputWithContext(context.Context) JobJobContainerOutput
}

type JobJobContainerArgs struct {
	Commands pulumi.StringArrayInput `pulumi:"commands"`
	Image    pulumi.StringInput      `pulumi:"image"`
	Name     pulumi.StringInput      `pulumi:"name"`
}

func (JobJobContainerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobJobContainer)(nil)).Elem()
}

func (i JobJobContainerArgs) ToJobJobContainerOutput() JobJobContainerOutput {
	return i.ToJobJobContainerOutputWithContext(context.Background())
}

func (i JobJobContainerArgs) ToJobJobContainerOutputWithContext(ctx context.Context) JobJobContainerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobJobContainerOutput)
}

// JobJobContainerArrayInput is an input type that accepts JobJobContainerArray and JobJobContainerArrayOutput values.
// You can construct a concrete instance of `JobJobContainerArrayInput` via:
//
//          JobJobContainerArray{ JobJobContainerArgs{...} }
type JobJobContainerArrayInput interface {
	pulumi.Input

	ToJobJobContainerArrayOutput() JobJobContainerArrayOutput
	ToJobJobContainerArrayOutputWithContext(context.Context) JobJobContainerArrayOutput
}

type JobJobContainerArray []JobJobContainerInput

func (JobJobContainerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]JobJobContainer)(nil)).Elem()
}

func (i JobJobContainerArray) ToJobJobContainerArrayOutput() JobJobContainerArrayOutput {
	return i.ToJobJobContainerArrayOutputWithContext(context.Background())
}

func (i JobJobContainerArray) ToJobJobContainerArrayOutputWithContext(ctx context.Context) JobJobContainerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobJobContainerArrayOutput)
}

type JobJobContainerOutput struct{ *pulumi.OutputState }

func (JobJobContainerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobJobContainer)(nil)).Elem()
}

func (o JobJobContainerOutput) ToJobJobContainerOutput() JobJobContainerOutput {
	return o
}

func (o JobJobContainerOutput) ToJobJobContainerOutputWithContext(ctx context.Context) JobJobContainerOutput {
	return o
}

func (o JobJobContainerOutput) Commands() pulumi.StringArrayOutput {
	return o.ApplyT(func(v JobJobContainer) []string { return v.Commands }).(pulumi.StringArrayOutput)
}

func (o JobJobContainerOutput) Image() pulumi.StringOutput {
	return o.ApplyT(func(v JobJobContainer) string { return v.Image }).(pulumi.StringOutput)
}

func (o JobJobContainerOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v JobJobContainer) string { return v.Name }).(pulumi.StringOutput)
}

type JobJobContainerArrayOutput struct{ *pulumi.OutputState }

func (JobJobContainerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]JobJobContainer)(nil)).Elem()
}

func (o JobJobContainerArrayOutput) ToJobJobContainerArrayOutput() JobJobContainerArrayOutput {
	return o
}

func (o JobJobContainerArrayOutput) ToJobJobContainerArrayOutputWithContext(ctx context.Context) JobJobContainerArrayOutput {
	return o
}

func (o JobJobContainerArrayOutput) Index(i pulumi.IntInput) JobJobContainerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) JobJobContainer {
		return vs[0].([]JobJobContainer)[vs[1].(int)]
	}).(JobJobContainerOutput)
}

type JobJobPolicy struct {
	RestartPolicy string `pulumi:"restartPolicy"`
}

// JobJobPolicyInput is an input type that accepts JobJobPolicyArgs and JobJobPolicyOutput values.
// You can construct a concrete instance of `JobJobPolicyInput` via:
//
//          JobJobPolicyArgs{...}
type JobJobPolicyInput interface {
	pulumi.Input

	ToJobJobPolicyOutput() JobJobPolicyOutput
	ToJobJobPolicyOutputWithContext(context.Context) JobJobPolicyOutput
}

type JobJobPolicyArgs struct {
	RestartPolicy pulumi.StringInput `pulumi:"restartPolicy"`
}

func (JobJobPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobJobPolicy)(nil)).Elem()
}

func (i JobJobPolicyArgs) ToJobJobPolicyOutput() JobJobPolicyOutput {
	return i.ToJobJobPolicyOutputWithContext(context.Background())
}

func (i JobJobPolicyArgs) ToJobJobPolicyOutputWithContext(ctx context.Context) JobJobPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobJobPolicyOutput)
}

func (i JobJobPolicyArgs) ToJobJobPolicyPtrOutput() JobJobPolicyPtrOutput {
	return i.ToJobJobPolicyPtrOutputWithContext(context.Background())
}

func (i JobJobPolicyArgs) ToJobJobPolicyPtrOutputWithContext(ctx context.Context) JobJobPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobJobPolicyOutput).ToJobJobPolicyPtrOutputWithContext(ctx)
}

// JobJobPolicyPtrInput is an input type that accepts JobJobPolicyArgs, JobJobPolicyPtr and JobJobPolicyPtrOutput values.
// You can construct a concrete instance of `JobJobPolicyPtrInput` via:
//
//          JobJobPolicyArgs{...}
//
//  or:
//
//          nil
type JobJobPolicyPtrInput interface {
	pulumi.Input

	ToJobJobPolicyPtrOutput() JobJobPolicyPtrOutput
	ToJobJobPolicyPtrOutputWithContext(context.Context) JobJobPolicyPtrOutput
}

type jobJobPolicyPtrType JobJobPolicyArgs

func JobJobPolicyPtr(v *JobJobPolicyArgs) JobJobPolicyPtrInput {
	return (*jobJobPolicyPtrType)(v)
}

func (*jobJobPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**JobJobPolicy)(nil)).Elem()
}

func (i *jobJobPolicyPtrType) ToJobJobPolicyPtrOutput() JobJobPolicyPtrOutput {
	return i.ToJobJobPolicyPtrOutputWithContext(context.Background())
}

func (i *jobJobPolicyPtrType) ToJobJobPolicyPtrOutputWithContext(ctx context.Context) JobJobPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobJobPolicyPtrOutput)
}

type JobJobPolicyOutput struct{ *pulumi.OutputState }

func (JobJobPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobJobPolicy)(nil)).Elem()
}

func (o JobJobPolicyOutput) ToJobJobPolicyOutput() JobJobPolicyOutput {
	return o
}

func (o JobJobPolicyOutput) ToJobJobPolicyOutputWithContext(ctx context.Context) JobJobPolicyOutput {
	return o
}

func (o JobJobPolicyOutput) ToJobJobPolicyPtrOutput() JobJobPolicyPtrOutput {
	return o.ToJobJobPolicyPtrOutputWithContext(context.Background())
}

func (o JobJobPolicyOutput) ToJobJobPolicyPtrOutputWithContext(ctx context.Context) JobJobPolicyPtrOutput {
	return o.ApplyT(func(v JobJobPolicy) *JobJobPolicy {
		return &v
	}).(JobJobPolicyPtrOutput)
}
func (o JobJobPolicyOutput) RestartPolicy() pulumi.StringOutput {
	return o.ApplyT(func(v JobJobPolicy) string { return v.RestartPolicy }).(pulumi.StringOutput)
}

type JobJobPolicyPtrOutput struct{ *pulumi.OutputState }

func (JobJobPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JobJobPolicy)(nil)).Elem()
}

func (o JobJobPolicyPtrOutput) ToJobJobPolicyPtrOutput() JobJobPolicyPtrOutput {
	return o
}

func (o JobJobPolicyPtrOutput) ToJobJobPolicyPtrOutputWithContext(ctx context.Context) JobJobPolicyPtrOutput {
	return o
}

func (o JobJobPolicyPtrOutput) Elem() JobJobPolicyOutput {
	return o.ApplyT(func(v *JobJobPolicy) JobJobPolicy { return *v }).(JobJobPolicyOutput)
}

func (o JobJobPolicyPtrOutput) RestartPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobJobPolicy) *string {
		if v == nil {
			return nil
		}
		return &v.RestartPolicy
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(AppAppOutput{})
	pulumi.RegisterOutputType(AppAppPtrOutput{})
	pulumi.RegisterOutputType(AppAppProcessOutput{})
	pulumi.RegisterOutputType(AppAppProcessArrayOutput{})
	pulumi.RegisterOutputType(AppAppRoutingSettingsOutput{})
	pulumi.RegisterOutputType(AppAppRoutingSettingsPtrOutput{})
	pulumi.RegisterOutputType(FrameworkFrameworkOutput{})
	pulumi.RegisterOutputType(FrameworkFrameworkPtrOutput{})
	pulumi.RegisterOutputType(FrameworkFrameworkIngressControllerOutput{})
	pulumi.RegisterOutputType(FrameworkFrameworkIngressControllerPtrOutput{})
	pulumi.RegisterOutputType(JobJobOutput{})
	pulumi.RegisterOutputType(JobJobPtrOutput{})
	pulumi.RegisterOutputType(JobJobContainerOutput{})
	pulumi.RegisterOutputType(JobJobContainerArrayOutput{})
	pulumi.RegisterOutputType(JobJobPolicyOutput{})
	pulumi.RegisterOutputType(JobJobPolicyPtrOutput{})
}
